// https://eslint.org/docs/latest/rules/#layout--formatting
module.exports = {
  'array-bracket-newline': ['error', 'consistent'],
  'array-bracket-spacing': ['error', 'never'],
  'array-element-newline': 'off',
  'arrow-parens': ['error', 'as-needed', { requireForBlockBody: true }],
  'arrow-spacing': ['error', { before: true, after: true }],
  'block-spacing': ['error', 'always'],
      'brace-style': ['error', '1tbs', { allowSingleLine: true }],
  'comma-dangle': ['error', {
      arrays: 'always-multiline',
      objects: 'always-multiline',
      imports: 'always-multiline',
      exports: 'always-multiline',
      functions: 'always-multiline',
    }],
      'comma-spacing': ['error', { before: false, after: true }],
  'comma-style': ['error', 'last', {
      exceptions: {
        ArrayExpression: false,
        ArrayPattern: false,
        ArrowFunctionExpression: false,
        CallExpression: false,
        FunctionDeclaration: false,
        FunctionExpression: false,
        ImportDeclaration: false,
        ObjectExpression: false,
        ObjectPattern: false,
        VariableDeclaration: false,
        NewExpression: false,
      },
    }],
  'computed-property-spacing': ['error', 'never'],
  'dot-location': ['error', 'property'],
  'eol-last': ['error', 'always'],
  'func-call-spacing': ['error', 'never'],
  'function-call-argument-newline': 'off',
  'function-paren-newline': ['error', 'consistent'],
  'generator-star-spacing': ['error', { before: false, after: true }],

      'implicit-arrow-linebreak': ['error', 'beside'],
  'indent': ['error', 2, {
      SwitchCase: 1,
      VariableDeclarator: 1,
      outerIIFEBody: 1,
      FunctionDeclaration: {
        parameters: 1,
        body: 1,
      },
      FunctionExpression: {
        parameters: 1,
        body: 1,
      },
      CallExpression: {
        arguments: 1,
      },
      ArrayExpression: 1,
      ObjectExpression: 1,
      ImportDeclaration: 1,
      flatTernaryExpressions: false,
      ignoredNodes: ['JSXElement', 'JSXElement > *', 'JSXAttribute', 'JSXIdentifier', 'JSXNamespacedName', 'JSXMemberExpression', 'JSXSpreadAttribute', 'JSXExpressionContainer', 'JSXOpeningElement', 'JSXClosingElement', 'JSXText', 'JSXEmptyExpression', 'JSXSpreadChild'],
      ignoreComments: false,
    }],
  'jsx-quotes': 'off',
      'key-spacing': ['error', { beforeColon: false, afterColon: true }],
  'keyword-spacing': ['error', {
      before: true,
      after: true,
      overrides: {
        return: { after: true },
        throw: { after: true },
        case: { after: true },
      },
    }],
  'line-comment-position': 'off',
  'linebreak-style': ['error', 'unix'],
  'lines-around-comment': 'off',
      'lines-between-class-members': ['error', 'always', { exceptAfterSingleLine: false }],
  'max-len': ['error', 100, 2, {
      ignorePattern: '^import ',
      ignoreUrls: true,
      ignoreComments: false,
      ignoreRegExpLiterals: true,
      ignoreStrings: true,
      ignoreTemplateLiterals: true,
    }],
  'max-statements-per-line': 'off',
  'multiline-ternary': 'off',
  'new-parens': 'error',
      'newline-per-chained-call': ['error', { ignoreChainWithDepth: 4 }],
  'no-extra-parens': 'off',
  'no-mixed-spaces-and-tabs': 'error',
  'no-multi-spaces': ['error', {
    ignoreEOLComments: false,
  }],
  'no-multiple-empty-lines': 'off',
  'no-tabs': 'error',
  'no-trailing-spaces': ['error', {
      skipBlankLines: false,
      ignoreComments: false,
    }],
  'no-whitespace-before-property': 'error',
      'nonblock-statement-body-position': ['error', 'beside', { overrides: {} }],
  'object-curly-newline': ['error', {
      ObjectExpression: { minProperties: 6, multiline: true, consistent: true },
      ObjectPattern: { minProperties: 6, multiline: true, consistent: true },
      ImportDeclaration: 'never',
      ExportDeclaration: { minProperties: 6, multiline: true, consistent: true },
    }],
  'object-curly-spacing': ['error', 'always'],
  'object-property-newline': ['error', {
      allowAllPropertiesOnSameLine: true,
    }],
      'operator-linebreak': ['error', 'before', { overrides: { '=': 'none' } }],
  'padded-blocks': ['error', {
      blocks: 'never',
      classes: 'never',
      switches: 'never',
    }, {
      allowSingleLineBlocks: true,
    }],
  'padding-line-between-statements': [
      'error',
      { blankLine: 'always', prev: '*', next: ['export', 'function', 'class', 'cjs-export'] },
      { blankLine: 'any', prev: ['export', 'cjs-export'], next: ['export', 'cjs-export'] },
    ],
      'quotes': ['error', 'single', { avoidEscape: true }],
  'rest-spread-spacing': ['error', 'never'],
  'semi': ['error', 'always'],
      'semi-spacing': ['error', { before: false, after: true }],
      'semi-style': ['error', 'last'],
  'space-before-blocks': 'error',
  'space-before-function-paren': ['error', {
      anonymous: 'always',
      named: 'never',
      asyncArrow: 'always',
    }],
  'space-in-parens': ['error', 'never'],
  'space-infix-ops': 'error',
  'space-unary-ops': ['error', {
      words: true,
      nonwords: false,
      overrides: {
      },
    }],
      'switch-colon-spacing': ['error', { after: true, before: false }],
  'template-curly-spacing': 'error',
  'template-tag-spacing': ['error', 'never'],
  'unicode-bom': ['error', 'never'],
  'wrap-iife': ['error', 'outside', { functionPrototypeMethods: false }],
  'wrap-regex': 'off',
  'yield-star-spacing': ['error', 'after'],
  'undefined': 'off',
};
